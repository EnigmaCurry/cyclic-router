// Generated by typings
// Source: node_modules/@cycle/history/lib/makeHistoryDriver.d.ts
declare module '~@cycle/history/lib/makeHistoryDriver' {
import { StreamAdapter } from '@cycle/base';
import { History, HistoryDriverOptions } from '~@cycle/history/lib/interfaces';
export function makeHistoryDriver(history: History, options?: HistoryDriverOptions): (sink$: any, runSA: StreamAdapter) => any;
}
declare module '@cycle/history/lib/makeHistoryDriver' {
export * from '~@cycle/history/lib/makeHistoryDriver';
}

// Generated by typings
// Source: node_modules/@cycle/history/lib/serverHistory.d.ts
declare module '~@cycle/history/lib/serverHistory' {
import { History } from '~@cycle/history/lib/interfaces';
export function createServerHistory(): History;
}
declare module '@cycle/history/lib/serverHistory' {
export * from '~@cycle/history/lib/serverHistory';
}

// Generated by typings
// Source: node_modules/@cycle/history/lib/util.d.ts
declare module '~@cycle/history/lib/util' {
import { Location, Pathname } from '~@cycle/history/lib/interfaces';
export function supportsHistory(): boolean;
export function createLocation(location?: Location | Pathname): Location;
}
declare module '@cycle/history/lib/util' {
export * from '~@cycle/history/lib/util';
}

// Generated by typings
// Source: node_modules/@cycle/history/lib/interfaces.d.ts
declare module '~@cycle/history/lib/interfaces' {
export type Pathname = string;
export type QueryString = string;
export type Query = Object;
export type LocationState = Object;
export type Action = 'PUSH' | 'POP' | 'REPLACE';
export type LocationKey = string;
export interface Location {
    pathname?: Pathname;
    search?: QueryString;
    query?: Query;
    state?: LocationState;
    action?: Action;
    key?: LocationKey;
    hash?: string;
    type?: string;
    value?: any;
}
export type unlistenFn = () => void;
export type Listener = (location: Location) => void;
export interface History {
    listen(listener: Listener): unlistenFn;
    push(location: Location | Pathname): void;
    replace(location: Location | Pathname): void;
    createHref(href: Pathname): string;
    createLocation(location: Location | Pathname): Location;
}
export interface HistoryDriverOptions {
    capture?: boolean;
    onError?: (err: Error) => void;
}
}
declare module '@cycle/history/lib/interfaces' {
export * from '~@cycle/history/lib/interfaces';
}

// Generated by typings
// Source: node_modules/@cycle/history/lib/index.d.ts
declare module '@cycle/history' {
export { makeHistoryDriver } from '~@cycle/history/lib/makeHistoryDriver';
export { createServerHistory } from '~@cycle/history/lib/serverHistory';
export { supportsHistory, createLocation } from '~@cycle/history/lib/util';
export * from '~@cycle/history/lib/interfaces';
}
